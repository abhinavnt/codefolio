name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger pipeline on push to main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Install docker-compose
      - name: Install docker-compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # Step 4: Create temporary .env files
      - name: Create temporary .env files
        run: |
          mkdir -p server client  # Create server and client directories if they donâ€™t exist
          touch server/.env       # Create empty server/.env
          touch client/.env       # Create empty client/.env

      # Step 5: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 6: Build and push Docker images
      - name: Build and push Docker images
        run: |
          docker-compose -f docker-compose.prod.yaml build
          docker-compose -f docker-compose.prod.yaml push

      # Step 7: Deploy to EC2
      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          # Save SSH key to a file
          echo "$EC2_SSH_KEY" > ssh_key.pem
          chmod 600 ssh_key.pem

          # Copy docker-compose.prod.yaml to EC2
          scp -i ssh_key.pem -o StrictHostKeyChecking=no docker-compose.prod.yaml $EC2_USER@$EC2_HOST:/home/$EC2_USER/docker-compose.prod.yaml

          # SSH into EC2 and execute deployment commands
          ssh -i ssh_key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'
            # Stop and remove existing containers
            sudo docker-compose -f /home/$EC2_USER/docker-compose.prod.yaml down

            # Remove all old images
            docker images -q | sort -u | xargs -I {} docker rmi -f {} || true

            # Pull and run the new images
            sudo docker-compose -f /home/$EC2_USER/docker-compose.prod.yaml up -d
          EOF

          # Clean up SSH key
          rm ssh_key.pem